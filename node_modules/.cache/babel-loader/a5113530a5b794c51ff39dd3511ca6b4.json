{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OverlayView = undefined;\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _delay2 = require(\"lodash/delay\");\n\nvar _delay3 = _interopRequireDefault(_delay2);\n\nvar _assign2 = require(\"lodash/assign\");\n\nvar _assign3 = _interopRequireDefault(_assign2);\n\nvar _bind2 = require(\"lodash/bind\");\n\nvar _bind3 = _interopRequireDefault(_bind2);\n\nvar _OverlayView$contextT;\n/*\n  * -----------------------------------------------------------------------------\n  * This file is auto-generated from the corresponding file at `src/macros/`.\n  * Please **DO NOT** edit this file directly when creating PRs.\n  * -----------------------------------------------------------------------------\n  */\n\n/* global google */\n\n\nvar _invariant = require(\"invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MapChildHelper = require(\"../utils/MapChildHelper\");\n\nvar _OverlayViewHelper = require(\"../utils/OverlayViewHelper\");\n\nvar _constants = require(\"../constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * A wrapper around `google.maps.OverlayView`\n *\n * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView\n */\n\n\nvar OverlayView = exports.OverlayView = function (_React$PureComponent) {\n  ;\n  (0, _inherits3.default)(OverlayView, _React$PureComponent);\n  /*\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView\n   */\n\n  function OverlayView(props, context) {\n    ;\n    (0, _classCallCheck3.default)(this, OverlayView);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (OverlayView.__proto__ || (0, _getPrototypeOf2.default)(OverlayView)).call(this, props, context));\n\n    var overlayView = new google.maps.OverlayView(); // You must implement three methods: onAdd(), draw(), and onRemove().\n\n    overlayView.onAdd = (0, _bind3.default)(_this.onAdd, _this);\n    overlayView.draw = (0, _bind3.default)(_this.draw, _this);\n    overlayView.onRemove = (0, _bind3.default)(_this.onRemove, _this);\n    _this.onPositionElement = (0, _bind3.default)(_this.onPositionElement, _this); // You must call setMap() with a valid Map object to trigger the call to\n    // the onAdd() method and setMap(null) in order to trigger the onRemove() method.\n\n    overlayView.setMap(_this.context[_constants.MAP]);\n    _this.state = (0, _defineProperty3.default)({}, _constants.OVERLAY_VIEW, overlayView);\n    return _this;\n  }\n\n  ;\n  (0, _createClass3.default)(OverlayView, [{\n    key: \"onAdd\",\n    value: function onAdd() {\n      this.containerElement = document.createElement(\"div\");\n      this.containerElement.style.position = \"absolute\";\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var mapPaneName = this.props.mapPaneName;\n      (0, _invariant2.default)(!!mapPaneName, \"OverlayView requires either props.mapPaneName or props.defaultMapPaneName but got %s\", mapPaneName); // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapPanes\n\n      var mapPanes = this.state[_constants.OVERLAY_VIEW].getPanes();\n\n      mapPanes[mapPaneName].appendChild(this.containerElement);\n\n      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react2.default.Children.only(this.props.children), this.containerElement, this.onPositionElement);\n    }\n  }, {\n    key: \"onPositionElement\",\n    value: function onPositionElement() {\n      // https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapCanvasProjection\n      var mapCanvasProjection = this.state[_constants.OVERLAY_VIEW].getProjection();\n\n      var offset = (0, _extends3.default)({\n        x: 0,\n        y: 0\n      }, (0, _OverlayViewHelper.getOffsetOverride)(this.containerElement, this.props));\n      var layoutStyles = (0, _OverlayViewHelper.getLayoutStyles)(mapCanvasProjection, offset, this.props);\n      (0, _assign3.default)(this.containerElement.style, layoutStyles);\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove() {\n      this.containerElement.parentNode.removeChild(this.containerElement);\n\n      _reactDom2.default.unmountComponentAtNode(this.containerElement);\n\n      this.containerElement = null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ;\n      (0, _MapChildHelper.componentDidMount)(this, this.state[_constants.OVERLAY_VIEW], eventMap);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      ;\n      (0, _MapChildHelper.componentDidUpdate)(this, this.state[_constants.OVERLAY_VIEW], eventMap, updaterMap, prevProps);\n      (0, _delay3.default)(this.state[_constants.OVERLAY_VIEW].draw);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ;\n      (0, _MapChildHelper.componentWillUnmount)(this);\n      var overlayView = this.state[_constants.OVERLAY_VIEW];\n\n      if (overlayView) {\n        overlayView.setMap(null); // You must implement three methods: onAdd(), draw(), and onRemove().\n\n        overlayView.onAdd = null;\n        overlayView.draw = null;\n        overlayView.onRemove = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return false;\n    }\n    /**\n     * Returns the panes in which this OverlayView can be rendered. The panes are not initialized until `onAdd` is called by the API.\n     * @type MapPanesonAdd\n     * @public\n     */\n\n  }, {\n    key: \"getPanes\",\n    value: function getPanes() {\n      return this.state[_constants.OVERLAY_VIEW].getPanes();\n    }\n    /**\n     * Returns the `MapCanvasProjection` object associated with this `OverlayView`. The projection is not initialized until `onAdd` is called by the API.\n     * @type MapCanvasProjectionMapCanvasProjectionOverlayViewonAdd\n     * @public\n     */\n\n  }, {\n    key: \"getProjection\",\n    value: function getProjection() {\n      return this.state[_constants.OVERLAY_VIEW].getProjection();\n    }\n  }]);\n  return OverlayView;\n}(_react2.default.PureComponent);\n\nOverlayView.FLOAT_PANE = \"floatPane\";\nOverlayView.MAP_PANE = \"mapPane\";\nOverlayView.MARKER_LAYER = \"markerLayer\";\nOverlayView.OVERLAY_LAYER = \"overlayLayer\";\nOverlayView.OVERLAY_MOUSE_TARGET = \"overlayMouseTarget\";\nOverlayView.propTypes = {\n  /**\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView\n   */\n  mapPaneName: _propTypes2.default.string,\n\n  /**\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView\n   */\n  position: _propTypes2.default.object,\n\n  /**\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView\n   */\n  bounds: _propTypes2.default.object,\n\n  /**\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView\n   */\n  children: _propTypes2.default.node.isRequired,\n\n  /**\n   * @see https://developers.google.com/maps/documentation/javascript/3.exp/reference#OverlayView\n   */\n  getPixelPositionOffset: _propTypes2.default.func\n};\nOverlayView.contextTypes = (_OverlayView$contextT = {}, (0, _defineProperty3.default)(_OverlayView$contextT, _constants.MAP, _propTypes2.default.object), (0, _defineProperty3.default)(_OverlayView$contextT, _constants.ANCHOR, _propTypes2.default.object), _OverlayView$contextT);\nexports.default = OverlayView;\nvar eventMap = {};\nvar updaterMap = {};","map":null,"metadata":{},"sourceType":"script"}