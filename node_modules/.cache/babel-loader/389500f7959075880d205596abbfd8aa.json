{"ast":null,"code":"import _defineProperty from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/mario/WebProjects/mario-personal-website/src/components/InfoArea/InfoArea.jsx\";\nimport React from \"react\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport infoStyle from \"assets/jss/material-kit-pro-react/components/infoStyle.jsx\";\n\nfunction InfoArea(_ref) {\n  var _classNames, _classNames2, _classNames3;\n\n  var props = _extends({}, _ref);\n\n  var classes = props.classes,\n      title = props.title,\n      description = props.description,\n      iconColor = props.iconColor,\n      vertical = props.vertical,\n      className = props.className;\n  var iconWrapper = classNames((_classNames = {}, _defineProperty(_classNames, classes.iconWrapper, true), _defineProperty(_classNames, classes[iconColor], true), _defineProperty(_classNames, classes.iconWrapperVertical, vertical), _classNames));\n  var iconClasses = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.icon, true), _defineProperty(_classNames2, classes.iconVertical, vertical), _classNames2));\n  var infoAreaClasses = classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.infoArea, true), _defineProperty(_classNames3, className, className !== undefined), _classNames3));\n  var icon = null;\n\n  switch (typeof props.icon) {\n    case \"string\":\n      icon = React.createElement(Icon, {\n        className: iconClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, props.icon);\n      break;\n\n    default:\n      icon = React.createElement(props.icon, {\n        className: iconClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    className: infoAreaClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: iconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, icon), React.createElement(\"div\", {\n    className: classes.descriptionWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: classes.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, description)));\n}\n\nInfoArea.defaultProps = {\n  iconColor: \"gray\"\n};\nInfoArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.node.isRequired,\n  iconColor: PropTypes.oneOf([\"primary\", \"warning\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  vertical: PropTypes.bool,\n  className: PropTypes.string\n};\nexport default withStyles(infoStyle)(InfoArea);","map":{"version":3,"sources":["/Users/mario/WebProjects/mario-personal-website/src/components/InfoArea/InfoArea.jsx"],"names":["React","PropTypes","classNames","withStyles","Icon","infoStyle","InfoArea","props","classes","title","description","iconColor","vertical","className","iconWrapper","iconWrapperVertical","iconClasses","icon","iconVertical","infoAreaClasses","infoArea","undefined","descriptionWrapper","defaultProps","propTypes","object","isRequired","oneOfType","func","string","node","oneOf","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport infoStyle from \"assets/jss/material-kit-pro-react/components/infoStyle.jsx\";\n\nfunction InfoArea({ ...props }) {\n  const { classes, title, description, iconColor, vertical, className } = props;\n  const iconWrapper = classNames({\n    [classes.iconWrapper]: true,\n    [classes[iconColor]]: true,\n    [classes.iconWrapperVertical]: vertical\n  });\n  const iconClasses = classNames({\n    [classes.icon]: true,\n    [classes.iconVertical]: vertical\n  });\n  const infoAreaClasses = classNames({\n    [classes.infoArea]: true,\n    [className]: className !== undefined\n  });\n  let icon = null;\n  switch (typeof props.icon) {\n    case \"string\":\n      icon = <Icon className={iconClasses}>{props.icon}</Icon>;\n      break;\n    default:\n      icon = <props.icon className={iconClasses} />;\n      break;\n  }\n  return (\n    <div className={infoAreaClasses}>\n      <div className={iconWrapper}>{icon}</div>\n      <div className={classes.descriptionWrapper}>\n        <h4 className={classes.title}>{title}</h4>\n        <div className={classes.description}>{description}</div>\n      </div>\n    </div>\n  );\n}\n\nInfoArea.defaultProps = {\n  iconColor: \"gray\"\n};\n\nInfoArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.oneOfType([PropTypes.func, PropTypes.string]).isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.node.isRequired,\n  iconColor: PropTypes.oneOf([\n    \"primary\",\n    \"warning\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  vertical: PropTypes.bool,\n  className: PropTypes.string\n};\n\nexport default withStyles(infoStyle)(InfoArea);\n"]},"metadata":{},"sourceType":"module"}