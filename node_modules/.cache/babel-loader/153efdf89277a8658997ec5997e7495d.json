{"ast":null,"code":"import _objectSpread from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mario/WebProjects/mario-personal-website/src/components/CustomFileInput/CustomFileInput.jsx\";\nimport React from \"react\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport styles from \"assets/jss/material-kit-pro-react/components/customFileInputStyle.jsx\";\n\nvar CustomFileInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomFileInput, _React$Component);\n\n  function CustomFileInput(props) {\n    var _this;\n\n    _classCallCheck(this, CustomFileInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomFileInput).call(this, props));\n\n    _this.onFocus = function (e) {\n      _this.refs.hiddenFile.click(e);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault(); // this.state.file is the file/image uploaded\n      // in this function you can save the image (this.state.file) on form submit\n      // you have to call it yourself\n    };\n\n    _this.addFile = function (e) {\n      var fileNames = \"\";\n      var files = e.target.files;\n\n      for (var i = 0; i < e.target.files.length; i++) {\n        fileNames = fileNames + e.target.files[i].name;\n\n        if (_this.props.multiple && i !== e.target.files.length - 1) {\n          fileNames = fileNames + \", \";\n        }\n      }\n\n      _this.setState({\n        fileNames: fileNames,\n        files: files\n      });\n    };\n\n    _this.state = {\n      fileNames: \"\",\n      files: null\n    };\n    return _this;\n  }\n\n  _createClass(CustomFileInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          id = _this$props.id,\n          endButton = _this$props.endButton,\n          startButton = _this$props.startButton,\n          inputProps = _this$props.inputProps,\n          formControlProps = _this$props.formControlProps,\n          multiple = _this$props.multiple;\n\n      if (inputProps && inputProps.type && inputProps.type === \"file\") {\n        inputProps.type = \"text\";\n      }\n\n      var buttonStart;\n      var buttonEnd;\n\n      if (startButton) {\n        buttonStart = React.createElement(Button, Object.assign({}, startButton.buttonProps, {\n          onClick: this.onFocus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), startButton.icon !== undefined ? startButton.icon : null, startButton.text !== undefined ? startButton.text : null);\n      }\n\n      if (endButton) {\n        buttonEnd = React.createElement(Button, Object.assign({}, endButton.buttonProps, {\n          onClick: this.onFocus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), endButton.icon !== undefined ? endButton.icon : null, endButton.text !== undefined ? endButton.text : null);\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.inputFileWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        className: classes.inputFile,\n        multiple: multiple,\n        ref: \"hiddenFile\",\n        onChange: this.addFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(CustomInput, {\n        id: id,\n        formControlProps: _objectSpread({}, formControlProps),\n        inputProps: _objectSpread({}, inputProps, {\n          onFocus: this.onFocus,\n          value: this.state.fileNames,\n          endAdornment: buttonEnd,\n          startAdornment: buttonStart\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomFileInput;\n}(React.Component);\n\nCustomFileInput.defaultProps = {\n  multiple: false\n};\nCustomFileInput.propTypes = {\n  id: PropTypes.string,\n  endButton: PropTypes.object,\n  startButton: PropTypes.object,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  multiple: PropTypes.bool\n};\nexport default withStyles(styles)(CustomFileInput);","map":{"version":3,"sources":["/Users/mario/WebProjects/mario-personal-website/src/components/CustomFileInput/CustomFileInput.jsx"],"names":["React","PropTypes","withStyles","CustomInput","Button","styles","CustomFileInput","props","onFocus","e","refs","hiddenFile","click","handleSubmit","preventDefault","addFile","fileNames","files","target","i","length","name","multiple","setState","state","classes","id","endButton","startButton","inputProps","formControlProps","type","buttonStart","buttonEnd","buttonProps","icon","undefined","text","inputFileWrapper","inputFile","value","endAdornment","startAdornment","Component","defaultProps","propTypes","string","object","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport styles from \"assets/jss/material-kit-pro-react/components/customFileInputStyle.jsx\";\n\nclass CustomFileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileNames: \"\",\n      files: null\n    };\n  }\n  onFocus = e => {\n    this.refs.hiddenFile.click(e);\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    // this.state.file is the file/image uploaded\n    // in this function you can save the image (this.state.file) on form submit\n    // you have to call it yourself\n  };\n  addFile = e => {\n    let fileNames = \"\";\n    let files = e.target.files;\n    for (let i = 0; i < e.target.files.length; i++) {\n      fileNames = fileNames + e.target.files[i].name;\n      if (this.props.multiple && i !== e.target.files.length - 1) {\n        fileNames = fileNames + \", \";\n      }\n    }\n    this.setState({\n      fileNames: fileNames,\n      files: files\n    });\n  };\n  render() {\n    const {\n      classes,\n      id,\n      endButton,\n      startButton,\n      inputProps,\n      formControlProps,\n      multiple\n    } = this.props;\n    if (inputProps && inputProps.type && inputProps.type === \"file\") {\n      inputProps.type = \"text\";\n    }\n    let buttonStart;\n    let buttonEnd;\n    if (startButton) {\n      buttonStart = (\n        <Button {...startButton.buttonProps} onClick={this.onFocus}>\n          {startButton.icon !== undefined ? startButton.icon : null}\n          {startButton.text !== undefined ? startButton.text : null}\n        </Button>\n      );\n    }\n    if (endButton) {\n      buttonEnd = (\n        <Button {...endButton.buttonProps} onClick={this.onFocus}>\n          {endButton.icon !== undefined ? endButton.icon : null}\n          {endButton.text !== undefined ? endButton.text : null}\n        </Button>\n      );\n    }\n    return (\n      <div className={classes.inputFileWrapper}>\n        <input\n          type=\"file\"\n          className={classes.inputFile}\n          multiple={multiple}\n          ref=\"hiddenFile\"\n          onChange={this.addFile}\n        />\n        <CustomInput\n          id={id}\n          formControlProps={{\n            ...formControlProps\n          }}\n          inputProps={{\n            ...inputProps,\n            onFocus: this.onFocus,\n            value: this.state.fileNames,\n            endAdornment: buttonEnd,\n            startAdornment: buttonStart\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nCustomFileInput.defaultProps = {\n  multiple: false\n};\n\nCustomFileInput.propTypes = {\n  id: PropTypes.string,\n  endButton: PropTypes.object,\n  startButton: PropTypes.object,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  multiple: PropTypes.bool\n};\n\nexport default withStyles(styles)(CustomFileInput);\n"]},"metadata":{},"sourceType":"module"}