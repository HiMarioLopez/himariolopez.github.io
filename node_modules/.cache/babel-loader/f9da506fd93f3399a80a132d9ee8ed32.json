{"ast":null,"code":"import _defineProperty from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mario/WebProjects/mario-personal-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mario/WebProjects/mario-personal-website/src/components/CustomDropdown/CustomDropdown.jsx\";\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\"; // core components\n\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport customDropdownStyle from \"assets/jss/material-kit-pro-react/components/customDropdownStyle.jsx\";\n\nvar CustomDropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomDropdown, _React$Component);\n\n  function CustomDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, CustomDropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomDropdown).call(this, props));\n\n    _this.handleClick = function () {\n      _this.setState(function (state) {\n        return {\n          open: !state.open\n        };\n      });\n    };\n\n    _this.handleClose = function (event) {\n      if (_this.anchorEl.contains(event.target)) {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      open: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseMenu = _this.handleCloseMenu.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CustomDropdown, [{\n    key: \"handleCloseMenu\",\n    value: function handleCloseMenu(param) {\n      this.setState({\n        open: false\n      });\n\n      if (this.props && this.props.onClick) {\n        this.props.onClick(param);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _classNames2,\n          _this2 = this,\n          _classNames3;\n\n      var open = this.state.open;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          buttonText = _this$props.buttonText,\n          buttonIcon = _this$props.buttonIcon,\n          dropdownList = _this$props.dropdownList,\n          buttonProps = _this$props.buttonProps,\n          dropup = _this$props.dropup,\n          dropdownHeader = _this$props.dropdownHeader,\n          caret = _this$props.caret,\n          hoverColor = _this$props.hoverColor,\n          dropPlacement = _this$props.dropPlacement,\n          rtlActive = _this$props.rtlActive,\n          noLiPadding = _this$props.noLiPadding,\n          innerDropDown = _this$props.innerDropDown,\n          navDropdown = _this$props.navDropdown;\n      var caretClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.caret, true), _defineProperty(_classNames, classes.caretDropup, dropup && !open), _defineProperty(_classNames, classes.caretActive, open && !dropup), _defineProperty(_classNames, classes.caretRTL, rtlActive), _classNames));\n      var dropdownItem = classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.dropdownItem, true), _defineProperty(_classNames2, classes[hoverColor + \"Hover\"], true), _defineProperty(_classNames2, classes.noLiPadding, noLiPadding), _defineProperty(_classNames2, classes.dropdownItemRTL, rtlActive), _classNames2));\n      var dropDownMenu = React.createElement(MenuList, {\n        role: \"menu\",\n        className: classes.menuList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, dropdownHeader !== undefined ? React.createElement(MenuItem, {\n        onClick: function onClick() {\n          return _this2.handleCloseMenu(dropdownHeader);\n        },\n        className: classes.dropdownHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, dropdownHeader) : null, dropdownList.map(function (prop, key) {\n        if (prop.divider) {\n          return React.createElement(Divider, {\n            key: key,\n            onClick: function onClick() {\n              return _this2.handleCloseMenu(\"divider\");\n            },\n            className: classes.dropdownDividerItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        } else if (prop.ref === \"multi\") {\n          return React.createElement(MenuItem, {\n            key: key,\n            className: dropdownItem,\n            style: {\n              overflow: \"visible\",\n              padding: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, prop);\n        }\n\n        return React.createElement(MenuItem, {\n          key: key,\n          onClick: function onClick() {\n            return _this2.handleCloseMenu(prop);\n          },\n          className: dropdownItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, prop);\n      }));\n      return React.createElement(\"div\", {\n        className: innerDropDown ? classes.innerManager : classes.manager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: buttonText !== undefined ? \"\" : classes.target,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, Object.assign({\n        \"aria-label\": \"Notifications\",\n        \"aria-owns\": open ? \"menu-list\" : null,\n        \"aria-haspopup\": \"true\",\n        buttonRef: function buttonRef(node) {\n          _this2.anchorEl = node;\n        }\n      }, buttonProps, {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), buttonIcon !== undefined ? React.createElement(this.props.buttonIcon, {\n        className: classes.buttonIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }) : null, buttonText !== undefined ? buttonText : null, caret ? React.createElement(\"b\", {\n        className: caretClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }) : null)), React.createElement(Popper, {\n        open: open,\n        anchorEl: this.anchorEl,\n        transition: true,\n        disablePortal: true,\n        placement: dropPlacement,\n        className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.popperClose, !open), _defineProperty(_classNames3, classes.pooperResponsive, true), _defineProperty(_classNames3, classes.pooperNav, open && navDropdown), _classNames3)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, function (_ref) {\n        var TransitionProps = _ref.TransitionProps,\n            placement = _ref.placement;\n        return React.createElement(Grow, {\n          in: open,\n          id: \"menu-list\",\n          style: dropup ? {\n            transformOrigin: \"0 100% 0\"\n          } : {\n            transformOrigin: \"0 0 0\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          className: classes.dropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, innerDropDown ? dropDownMenu : React.createElement(ClickAwayListener, {\n          onClickAway: _this2.handleClose,\n          ref: \"cacat\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, dropDownMenu)));\n      }));\n    }\n  }]);\n\n  return CustomDropdown;\n}(React.Component);\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  dropup: false,\n  hoverColor: \"primary\"\n};\nCustomDropdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n  hoverColor: PropTypes.oneOf([\"dark\", \"primary\", \"info\", \"success\", \"warning\", \"danger\", \"rose\"]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.func,\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  dropPlacement: PropTypes.oneOf([\"bottom\", \"top\", \"right\", \"left\", \"bottom-start\", \"bottom-end\", \"top-start\", \"top-end\", \"right-start\", \"right-end\", \"left-start\", \"left-end\"]),\n  noLiPadding: PropTypes.bool,\n  innerDropDown: PropTypes.bool,\n  navDropdown: PropTypes.bool,\n  // This is a function that returns the clicked menu item\n  onClick: PropTypes.func\n};\nexport default withStyles(customDropdownStyle)(CustomDropdown);","map":{"version":3,"sources":["/Users/mario/WebProjects/mario-personal-website/src/components/CustomDropdown/CustomDropdown.jsx"],"names":["React","classNames","PropTypes","withStyles","MenuItem","MenuList","ClickAwayListener","Paper","Grow","Divider","Popper","Button","customDropdownStyle","CustomDropdown","props","handleClick","setState","state","open","handleClose","event","anchorEl","contains","target","bind","handleCloseMenu","param","onClick","classes","buttonText","buttonIcon","dropdownList","buttonProps","dropup","dropdownHeader","caret","hoverColor","dropPlacement","rtlActive","noLiPadding","innerDropDown","navDropdown","caretClasses","caretDropup","caretActive","caretRTL","dropdownItem","dropdownItemRTL","dropDownMenu","menuList","undefined","map","prop","key","divider","dropdownDividerItem","ref","overflow","padding","innerManager","manager","node","popperClose","pooperResponsive","pooperNav","TransitionProps","placement","transformOrigin","dropdown","Component","defaultProps","propTypes","object","isRequired","oneOf","func","array","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Popper from \"@material-ui/core/Popper\";\n// core components\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport customDropdownStyle from \"assets/jss/material-kit-pro-react/components/customDropdownStyle.jsx\";\n\nclass CustomDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleCloseMenu = this.handleCloseMenu.bind(this);\n  }\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n  handleCloseMenu(param) {\n    this.setState({ open: false });\n    if (this.props && this.props.onClick) {\n      this.props.onClick(param);\n    }\n  }\n  render() {\n    const { open } = this.state;\n    const {\n      classes,\n      buttonText,\n      buttonIcon,\n      dropdownList,\n      buttonProps,\n      dropup,\n      dropdownHeader,\n      caret,\n      hoverColor,\n      dropPlacement,\n      rtlActive,\n      noLiPadding,\n      innerDropDown,\n      navDropdown\n    } = this.props;\n    const caretClasses = classNames({\n      [classes.caret]: true,\n      [classes.caretDropup]: dropup && !open,\n      [classes.caretActive]: open && !dropup,\n      [classes.caretRTL]: rtlActive\n    });\n    const dropdownItem = classNames({\n      [classes.dropdownItem]: true,\n      [classes[hoverColor + \"Hover\"]]: true,\n      [classes.noLiPadding]: noLiPadding,\n      [classes.dropdownItemRTL]: rtlActive\n    });\n    const dropDownMenu = (\n      <MenuList role=\"menu\" className={classes.menuList}>\n        {dropdownHeader !== undefined ? (\n          <MenuItem\n            onClick={() => this.handleCloseMenu(dropdownHeader)}\n            className={classes.dropdownHeader}\n          >\n            {dropdownHeader}\n          </MenuItem>\n        ) : null}\n        {dropdownList.map((prop, key) => {\n          if (prop.divider) {\n            return (\n              <Divider\n                key={key}\n                onClick={() => this.handleCloseMenu(\"divider\")}\n                className={classes.dropdownDividerItem}\n              />\n            );\n          } else if (prop.ref === \"multi\") {\n            return (\n              <MenuItem\n                key={key}\n                className={dropdownItem}\n                style={{ overflow: \"visible\", padding: 0 }}\n              >\n                {prop}\n              </MenuItem>\n            );\n          }\n          return (\n            <MenuItem\n              key={key}\n              onClick={() => this.handleCloseMenu(prop)}\n              className={dropdownItem}\n            >\n              {prop}\n            </MenuItem>\n          );\n        })}\n      </MenuList>\n    );\n    return (\n      <div className={innerDropDown ? classes.innerManager : classes.manager}>\n        <div className={buttonText !== undefined ? \"\" : classes.target}>\n          <Button\n            aria-label=\"Notifications\"\n            aria-owns={open ? \"menu-list\" : null}\n            aria-haspopup=\"true\"\n            buttonRef={node => {\n              this.anchorEl = node;\n            }}\n            {...buttonProps}\n            onClick={this.handleClick}\n          >\n            {buttonIcon !== undefined ? (\n              <this.props.buttonIcon className={classes.buttonIcon} />\n            ) : null}\n            {buttonText !== undefined ? buttonText : null}\n            {caret ? <b className={caretClasses} /> : null}\n          </Button>\n        </div>\n        <Popper\n          open={open}\n          anchorEl={this.anchorEl}\n          transition\n          disablePortal\n          placement={dropPlacement}\n          className={classNames({\n            [classes.popperClose]: !open,\n            [classes.pooperResponsive]: true,\n            [classes.pooperNav]: open && navDropdown\n          })}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              in={open}\n              id=\"menu-list\"\n              style={\n                dropup\n                  ? { transformOrigin: \"0 100% 0\" }\n                  : { transformOrigin: \"0 0 0\" }\n              }\n            >\n              <Paper className={classes.dropdown}>\n                {innerDropDown ? (\n                  dropDownMenu\n                ) : (\n                  <ClickAwayListener onClickAway={this.handleClose} ref=\"cacat\">\n                    {dropDownMenu}\n                  </ClickAwayListener>\n                )}\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    );\n  }\n}\n\nCustomDropdown.defaultProps = {\n  caret: true,\n  dropup: false,\n  hoverColor: \"primary\"\n};\n\nCustomDropdown.propTypes = {\n  classes: PropTypes.object.isRequired,\n  hoverColor: PropTypes.oneOf([\n    \"dark\",\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\"\n  ]),\n  buttonText: PropTypes.node,\n  buttonIcon: PropTypes.func,\n  dropdownList: PropTypes.array,\n  buttonProps: PropTypes.object,\n  dropup: PropTypes.bool,\n  dropdownHeader: PropTypes.node,\n  rtlActive: PropTypes.bool,\n  caret: PropTypes.bool,\n  dropPlacement: PropTypes.oneOf([\n    \"bottom\",\n    \"top\",\n    \"right\",\n    \"left\",\n    \"bottom-start\",\n    \"bottom-end\",\n    \"top-start\",\n    \"top-end\",\n    \"right-start\",\n    \"right-end\",\n    \"left-start\",\n    \"left-end\"\n  ]),\n  noLiPadding: PropTypes.bool,\n  innerDropDown: PropTypes.bool,\n  navDropdown: PropTypes.bool,\n  // This is a function that returns the clicked menu item\n  onClick: PropTypes.func\n};\n\nexport default withStyles(customDropdownStyle)(CustomDropdown);\n"]},"metadata":{},"sourceType":"module"}