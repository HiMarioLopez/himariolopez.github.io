{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _Tablelvl2Context = _interopRequireDefault(require(\"../Table/Tablelvl2Context\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      height: 48,\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 'none',\n      '&$selected': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.04)' // grey[100]\n        : 'rgba(255, 255, 255, 0.08)'\n      },\n      '&$hover:hover': {\n        backgroundColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.07)' // grey[200]\n        : 'rgba(255, 255, 255, 0.14)'\n      }\n    },\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant = 'head'. */\n    head: {\n      height: 56\n    },\n\n    /* Styles applied to the root element if table variant = 'footer'. */\n    footer: {\n      height: 56\n    }\n  };\n};\n/**\r\n * Will automatically set dynamic row height\r\n * based on the material table element parent (head, body, etc).\r\n */\n\n\nexports.styles = styles;\n\nfunction TableRow(props) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      Component = props.component,\n      hover = props.hover,\n      selected = props.selected,\n      other = (0, _objectWithoutProperties2.default)(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n  return _react.default.createElement(_Tablelvl2Context.default.Consumer, null, function (tablelvl2) {\n    var _classNames;\n\n    var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.head, tablelvl2 && tablelvl2.variant === 'head'), (0, _defineProperty2.default)(_classNames, classes.footer, tablelvl2 && tablelvl2.variant === 'footer'), (0, _defineProperty2.default)(_classNames, classes.hover, hover), (0, _defineProperty2.default)(_classNames, classes.selected, selected), _classNames), classNameProp);\n    return _react.default.createElement(Component, (0, _extends2.default)({\n      className: className\n    }, other));\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\r\n   * Should be valid <tr> children such as `TableCell`.\r\n   */\n  children: _propTypes.default.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css-api) below for more details.\r\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: _propTypes.default.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a DOM element or a component.\r\n   */\n  component: _utils.componentPropType,\n\n  /**\r\n   * If `true`, the table row will shade on hover.\r\n   */\n  hover: _propTypes.default.bool,\n\n  /**\r\n   * If `true`, the table row will have the selected shading.\r\n   */\n  selected: _propTypes.default.bool\n} : void 0;\nTableRow.defaultProps = {\n  component: 'tr',\n  hover: false,\n  selected: false\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiTableRow'\n})(TableRow);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}